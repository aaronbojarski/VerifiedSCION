// Copyright 2022 ETH Zurich
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +gobra

package onehop

import (
	"github.com/scionproto/scion/pkg/slayers/path"
	"github.com/scionproto/scion/pkg/slayers/path/onehop"
)

// This predicate is required by the Path interface when calling
// DecodeFromBytes and exchanged for a Mem predicate on success.
pred (o *Path) NonInitMem() {
	acc(o) &&
		(forall i int :: 0 <= i && i < len(o.FirstHop.Mac) ==>
			acc(&o.FirstHop.Mac[i])) &&
		(forall i int :: 0 <= i && i < len(o.SecondHop.Mac) ==>
			acc(&o.SecondHop.Mac[i]))
}

// This predicate is established right after DecodeFromBytes.
// Because this method does not perform any bounds checks, it
// is not possible to have assertions in this invariant about
// how the fileds of Base compare to those of its MetaHdr field.
pred (o *Path) Mem() {
	acc(&o.Info) &&
		o.FirstHop.Mem() &&
		o.SecondHop.Mem()
}
